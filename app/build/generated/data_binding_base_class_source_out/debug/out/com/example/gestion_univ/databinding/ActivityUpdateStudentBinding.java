// Generated by view binder compiler. Do not edit!
package com.example.gestion_univ.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gestion_univ.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateStudentBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button bntUpdateS;

  @NonNull
  public final NestedScrollView main;

  @NonNull
  public final ScrollView scrollView1;

  @NonNull
  public final EditText updateAdresseS;

  @NonNull
  public final EditText updateDateNaissanceS;

  @NonNull
  public final EditText updateMentionS;

  @NonNull
  public final EditText updateNiveauS;

  @NonNull
  public final EditText updateNomS;

  @NonNull
  public final EditText updateNumInscriptionS;

  @NonNull
  public final EditText updateNumeroID1;

  @NonNull
  public final EditText updateParcoursS;

  @NonNull
  public final EditText updatePrenomS;

  @NonNull
  public final EditText updateTelephoneS;

  private ActivityUpdateStudentBinding(@NonNull NestedScrollView rootView,
      @NonNull Button bntUpdateS, @NonNull NestedScrollView main, @NonNull ScrollView scrollView1,
      @NonNull EditText updateAdresseS, @NonNull EditText updateDateNaissanceS,
      @NonNull EditText updateMentionS, @NonNull EditText updateNiveauS,
      @NonNull EditText updateNomS, @NonNull EditText updateNumInscriptionS,
      @NonNull EditText updateNumeroID1, @NonNull EditText updateParcoursS,
      @NonNull EditText updatePrenomS, @NonNull EditText updateTelephoneS) {
    this.rootView = rootView;
    this.bntUpdateS = bntUpdateS;
    this.main = main;
    this.scrollView1 = scrollView1;
    this.updateAdresseS = updateAdresseS;
    this.updateDateNaissanceS = updateDateNaissanceS;
    this.updateMentionS = updateMentionS;
    this.updateNiveauS = updateNiveauS;
    this.updateNomS = updateNomS;
    this.updateNumInscriptionS = updateNumInscriptionS;
    this.updateNumeroID1 = updateNumeroID1;
    this.updateParcoursS = updateParcoursS;
    this.updatePrenomS = updatePrenomS;
    this.updateTelephoneS = updateTelephoneS;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateStudentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateStudentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_student, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateStudentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bntUpdateS;
      Button bntUpdateS = ViewBindings.findChildViewById(rootView, id);
      if (bntUpdateS == null) {
        break missingId;
      }

      NestedScrollView main = (NestedScrollView) rootView;

      id = R.id.scrollView1;
      ScrollView scrollView1 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView1 == null) {
        break missingId;
      }

      id = R.id.updateAdresseS;
      EditText updateAdresseS = ViewBindings.findChildViewById(rootView, id);
      if (updateAdresseS == null) {
        break missingId;
      }

      id = R.id.updateDate_naissanceS;
      EditText updateDateNaissanceS = ViewBindings.findChildViewById(rootView, id);
      if (updateDateNaissanceS == null) {
        break missingId;
      }

      id = R.id.updateMentionS;
      EditText updateMentionS = ViewBindings.findChildViewById(rootView, id);
      if (updateMentionS == null) {
        break missingId;
      }

      id = R.id.updateNiveauS;
      EditText updateNiveauS = ViewBindings.findChildViewById(rootView, id);
      if (updateNiveauS == null) {
        break missingId;
      }

      id = R.id.updateNomS;
      EditText updateNomS = ViewBindings.findChildViewById(rootView, id);
      if (updateNomS == null) {
        break missingId;
      }

      id = R.id.updateNum_inscriptionS;
      EditText updateNumInscriptionS = ViewBindings.findChildViewById(rootView, id);
      if (updateNumInscriptionS == null) {
        break missingId;
      }

      id = R.id.updateNumeroID1;
      EditText updateNumeroID1 = ViewBindings.findChildViewById(rootView, id);
      if (updateNumeroID1 == null) {
        break missingId;
      }

      id = R.id.updateParcoursS;
      EditText updateParcoursS = ViewBindings.findChildViewById(rootView, id);
      if (updateParcoursS == null) {
        break missingId;
      }

      id = R.id.updatePrenomS;
      EditText updatePrenomS = ViewBindings.findChildViewById(rootView, id);
      if (updatePrenomS == null) {
        break missingId;
      }

      id = R.id.updateTelephoneS;
      EditText updateTelephoneS = ViewBindings.findChildViewById(rootView, id);
      if (updateTelephoneS == null) {
        break missingId;
      }

      return new ActivityUpdateStudentBinding((NestedScrollView) rootView, bntUpdateS, main,
          scrollView1, updateAdresseS, updateDateNaissanceS, updateMentionS, updateNiveauS,
          updateNomS, updateNumInscriptionS, updateNumeroID1, updateParcoursS, updatePrenomS,
          updateTelephoneS);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
