// Generated by view binder compiler. Do not edit!
package com.example.gestion_univ.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gestion_univ.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerItem1Binding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView NumeroIDE;

  @NonNull
  public final TextView adresseD;

  @NonNull
  public final TextView adresseE;

  @NonNull
  public final TextView dateD;

  @NonNull
  public final TextView dateE;

  @NonNull
  public final TextView mentionD;

  @NonNull
  public final TextView mentionE;

  @NonNull
  public final TextView niveauD;

  @NonNull
  public final TextView niveauE;

  @NonNull
  public final TextView nomD;

  @NonNull
  public final TextView nomE;

  @NonNull
  public final TextView numD;

  @NonNull
  public final TextView numInscription;

  @NonNull
  public final TextView numInscriptionE;

  @NonNull
  public final TextView parcoursD;

  @NonNull
  public final TextView parcoursE;

  @NonNull
  public final TextView prenomD;

  @NonNull
  public final TextView prenomE;

  @NonNull
  public final CardView recCard1;

  @NonNull
  public final ShapeableImageView recImage1;

  @NonNull
  public final TextView telephoneD;

  @NonNull
  public final TextView telephoneE;

  private RecyclerItem1Binding(@NonNull CardView rootView, @NonNull TextView NumeroIDE,
      @NonNull TextView adresseD, @NonNull TextView adresseE, @NonNull TextView dateD,
      @NonNull TextView dateE, @NonNull TextView mentionD, @NonNull TextView mentionE,
      @NonNull TextView niveauD, @NonNull TextView niveauE, @NonNull TextView nomD,
      @NonNull TextView nomE, @NonNull TextView numD, @NonNull TextView numInscription,
      @NonNull TextView numInscriptionE, @NonNull TextView parcoursD, @NonNull TextView parcoursE,
      @NonNull TextView prenomD, @NonNull TextView prenomE, @NonNull CardView recCard1,
      @NonNull ShapeableImageView recImage1, @NonNull TextView telephoneD,
      @NonNull TextView telephoneE) {
    this.rootView = rootView;
    this.NumeroIDE = NumeroIDE;
    this.adresseD = adresseD;
    this.adresseE = adresseE;
    this.dateD = dateD;
    this.dateE = dateE;
    this.mentionD = mentionD;
    this.mentionE = mentionE;
    this.niveauD = niveauD;
    this.niveauE = niveauE;
    this.nomD = nomD;
    this.nomE = nomE;
    this.numD = numD;
    this.numInscription = numInscription;
    this.numInscriptionE = numInscriptionE;
    this.parcoursD = parcoursD;
    this.parcoursE = parcoursE;
    this.prenomD = prenomD;
    this.prenomE = prenomE;
    this.recCard1 = recCard1;
    this.recImage1 = recImage1;
    this.telephoneD = telephoneD;
    this.telephoneE = telephoneE;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerItem1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerItem1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_item1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerItem1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.NumeroIDE;
      TextView NumeroIDE = ViewBindings.findChildViewById(rootView, id);
      if (NumeroIDE == null) {
        break missingId;
      }

      id = R.id.adresseD;
      TextView adresseD = ViewBindings.findChildViewById(rootView, id);
      if (adresseD == null) {
        break missingId;
      }

      id = R.id.adresseE;
      TextView adresseE = ViewBindings.findChildViewById(rootView, id);
      if (adresseE == null) {
        break missingId;
      }

      id = R.id.dateD;
      TextView dateD = ViewBindings.findChildViewById(rootView, id);
      if (dateD == null) {
        break missingId;
      }

      id = R.id.dateE;
      TextView dateE = ViewBindings.findChildViewById(rootView, id);
      if (dateE == null) {
        break missingId;
      }

      id = R.id.mentionD;
      TextView mentionD = ViewBindings.findChildViewById(rootView, id);
      if (mentionD == null) {
        break missingId;
      }

      id = R.id.mentionE;
      TextView mentionE = ViewBindings.findChildViewById(rootView, id);
      if (mentionE == null) {
        break missingId;
      }

      id = R.id.niveauD;
      TextView niveauD = ViewBindings.findChildViewById(rootView, id);
      if (niveauD == null) {
        break missingId;
      }

      id = R.id.niveauE;
      TextView niveauE = ViewBindings.findChildViewById(rootView, id);
      if (niveauE == null) {
        break missingId;
      }

      id = R.id.nomD;
      TextView nomD = ViewBindings.findChildViewById(rootView, id);
      if (nomD == null) {
        break missingId;
      }

      id = R.id.nomE;
      TextView nomE = ViewBindings.findChildViewById(rootView, id);
      if (nomE == null) {
        break missingId;
      }

      id = R.id.numD;
      TextView numD = ViewBindings.findChildViewById(rootView, id);
      if (numD == null) {
        break missingId;
      }

      id = R.id.num_inscription;
      TextView numInscription = ViewBindings.findChildViewById(rootView, id);
      if (numInscription == null) {
        break missingId;
      }

      id = R.id.num_inscriptionE;
      TextView numInscriptionE = ViewBindings.findChildViewById(rootView, id);
      if (numInscriptionE == null) {
        break missingId;
      }

      id = R.id.parcoursD;
      TextView parcoursD = ViewBindings.findChildViewById(rootView, id);
      if (parcoursD == null) {
        break missingId;
      }

      id = R.id.parcoursE;
      TextView parcoursE = ViewBindings.findChildViewById(rootView, id);
      if (parcoursE == null) {
        break missingId;
      }

      id = R.id.prenomD;
      TextView prenomD = ViewBindings.findChildViewById(rootView, id);
      if (prenomD == null) {
        break missingId;
      }

      id = R.id.prenomE;
      TextView prenomE = ViewBindings.findChildViewById(rootView, id);
      if (prenomE == null) {
        break missingId;
      }

      CardView recCard1 = (CardView) rootView;

      id = R.id.recImage1;
      ShapeableImageView recImage1 = ViewBindings.findChildViewById(rootView, id);
      if (recImage1 == null) {
        break missingId;
      }

      id = R.id.telephoneD;
      TextView telephoneD = ViewBindings.findChildViewById(rootView, id);
      if (telephoneD == null) {
        break missingId;
      }

      id = R.id.telephoneE;
      TextView telephoneE = ViewBindings.findChildViewById(rootView, id);
      if (telephoneE == null) {
        break missingId;
      }

      return new RecyclerItem1Binding((CardView) rootView, NumeroIDE, adresseD, adresseE, dateD,
          dateE, mentionD, mentionE, niveauD, niveauE, nomD, nomE, numD, numInscription,
          numInscriptionE, parcoursD, parcoursE, prenomD, prenomE, recCard1, recImage1, telephoneD,
          telephoneE);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
