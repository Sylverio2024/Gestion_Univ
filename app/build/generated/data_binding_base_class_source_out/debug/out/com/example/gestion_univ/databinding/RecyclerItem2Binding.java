// Generated by view binder compiler. Do not edit!
package com.example.gestion_univ.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gestion_univ.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerItem2Binding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView DescriptionCours;

  @NonNull
  public final TextView DescriptionCoursD;

  @NonNull
  public final TextView NiveauCours;

  @NonNull
  public final TextView NiveauCoursD;

  @NonNull
  public final TextView NomCours;

  @NonNull
  public final TextView NomD;

  @NonNull
  public final TextView NumeroIDCours;

  @NonNull
  public final TextView ParcoursCours;

  @NonNull
  public final TextView ParcoursCoursD;

  @NonNull
  public final TextView SalleCours;

  @NonNull
  public final TextView SalleCoursD;

  @NonNull
  public final TextView dateCours;

  @NonNull
  public final TextView heureCours;

  @NonNull
  public final TextView numD;

  @NonNull
  public final CardView recCard2;

  private RecyclerItem2Binding(@NonNull CardView rootView, @NonNull TextView DescriptionCours,
      @NonNull TextView DescriptionCoursD, @NonNull TextView NiveauCours,
      @NonNull TextView NiveauCoursD, @NonNull TextView NomCours, @NonNull TextView NomD,
      @NonNull TextView NumeroIDCours, @NonNull TextView ParcoursCours,
      @NonNull TextView ParcoursCoursD, @NonNull TextView SalleCours, @NonNull TextView SalleCoursD,
      @NonNull TextView dateCours, @NonNull TextView heureCours, @NonNull TextView numD,
      @NonNull CardView recCard2) {
    this.rootView = rootView;
    this.DescriptionCours = DescriptionCours;
    this.DescriptionCoursD = DescriptionCoursD;
    this.NiveauCours = NiveauCours;
    this.NiveauCoursD = NiveauCoursD;
    this.NomCours = NomCours;
    this.NomD = NomD;
    this.NumeroIDCours = NumeroIDCours;
    this.ParcoursCours = ParcoursCours;
    this.ParcoursCoursD = ParcoursCoursD;
    this.SalleCours = SalleCours;
    this.SalleCoursD = SalleCoursD;
    this.dateCours = dateCours;
    this.heureCours = heureCours;
    this.numD = numD;
    this.recCard2 = recCard2;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerItem2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerItem2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_item2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerItem2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DescriptionCours;
      TextView DescriptionCours = ViewBindings.findChildViewById(rootView, id);
      if (DescriptionCours == null) {
        break missingId;
      }

      id = R.id.DescriptionCoursD;
      TextView DescriptionCoursD = ViewBindings.findChildViewById(rootView, id);
      if (DescriptionCoursD == null) {
        break missingId;
      }

      id = R.id.NiveauCours;
      TextView NiveauCours = ViewBindings.findChildViewById(rootView, id);
      if (NiveauCours == null) {
        break missingId;
      }

      id = R.id.NiveauCoursD;
      TextView NiveauCoursD = ViewBindings.findChildViewById(rootView, id);
      if (NiveauCoursD == null) {
        break missingId;
      }

      id = R.id.NomCours;
      TextView NomCours = ViewBindings.findChildViewById(rootView, id);
      if (NomCours == null) {
        break missingId;
      }

      id = R.id.NomD;
      TextView NomD = ViewBindings.findChildViewById(rootView, id);
      if (NomD == null) {
        break missingId;
      }

      id = R.id.NumeroIDCours;
      TextView NumeroIDCours = ViewBindings.findChildViewById(rootView, id);
      if (NumeroIDCours == null) {
        break missingId;
      }

      id = R.id.ParcoursCours;
      TextView ParcoursCours = ViewBindings.findChildViewById(rootView, id);
      if (ParcoursCours == null) {
        break missingId;
      }

      id = R.id.ParcoursCoursD;
      TextView ParcoursCoursD = ViewBindings.findChildViewById(rootView, id);
      if (ParcoursCoursD == null) {
        break missingId;
      }

      id = R.id.SalleCours;
      TextView SalleCours = ViewBindings.findChildViewById(rootView, id);
      if (SalleCours == null) {
        break missingId;
      }

      id = R.id.SalleCoursD;
      TextView SalleCoursD = ViewBindings.findChildViewById(rootView, id);
      if (SalleCoursD == null) {
        break missingId;
      }

      id = R.id.dateCours;
      TextView dateCours = ViewBindings.findChildViewById(rootView, id);
      if (dateCours == null) {
        break missingId;
      }

      id = R.id.heureCours;
      TextView heureCours = ViewBindings.findChildViewById(rootView, id);
      if (heureCours == null) {
        break missingId;
      }

      id = R.id.numD;
      TextView numD = ViewBindings.findChildViewById(rootView, id);
      if (numD == null) {
        break missingId;
      }

      CardView recCard2 = (CardView) rootView;

      return new RecyclerItem2Binding((CardView) rootView, DescriptionCours, DescriptionCoursD,
          NiveauCours, NiveauCoursD, NomCours, NomD, NumeroIDCours, ParcoursCours, ParcoursCoursD,
          SalleCours, SalleCoursD, dateCours, heureCours, numD, recCard2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
