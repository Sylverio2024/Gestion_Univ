// Generated by view binder compiler. Do not edit!
package com.example.gestion_univ.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gestion_univ.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView Adresse;

  @NonNull
  public final TextView AdresseD;

  @NonNull
  public final TextView Categorie;

  @NonNull
  public final TextView CategorieD;

  @NonNull
  public final TextView Nom;

  @NonNull
  public final TextView NomD;

  @NonNull
  public final TextView NumeroID;

  @NonNull
  public final TextView Prenom;

  @NonNull
  public final TextView PrenomD;

  @NonNull
  public final TextView Specialite;

  @NonNull
  public final TextView SpecialiteD;

  @NonNull
  public final TextView Telephone;

  @NonNull
  public final TextView TelephoneD;

  @NonNull
  public final TextView numD;

  @NonNull
  public final CardView recCard;

  @NonNull
  public final ShapeableImageView recImage;

  private RecyclerItemBinding(@NonNull CardView rootView, @NonNull TextView Adresse,
      @NonNull TextView AdresseD, @NonNull TextView Categorie, @NonNull TextView CategorieD,
      @NonNull TextView Nom, @NonNull TextView NomD, @NonNull TextView NumeroID,
      @NonNull TextView Prenom, @NonNull TextView PrenomD, @NonNull TextView Specialite,
      @NonNull TextView SpecialiteD, @NonNull TextView Telephone, @NonNull TextView TelephoneD,
      @NonNull TextView numD, @NonNull CardView recCard, @NonNull ShapeableImageView recImage) {
    this.rootView = rootView;
    this.Adresse = Adresse;
    this.AdresseD = AdresseD;
    this.Categorie = Categorie;
    this.CategorieD = CategorieD;
    this.Nom = Nom;
    this.NomD = NomD;
    this.NumeroID = NumeroID;
    this.Prenom = Prenom;
    this.PrenomD = PrenomD;
    this.Specialite = Specialite;
    this.SpecialiteD = SpecialiteD;
    this.Telephone = Telephone;
    this.TelephoneD = TelephoneD;
    this.numD = numD;
    this.recCard = recCard;
    this.recImage = recImage;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Adresse;
      TextView Adresse = ViewBindings.findChildViewById(rootView, id);
      if (Adresse == null) {
        break missingId;
      }

      id = R.id.AdresseD;
      TextView AdresseD = ViewBindings.findChildViewById(rootView, id);
      if (AdresseD == null) {
        break missingId;
      }

      id = R.id.Categorie;
      TextView Categorie = ViewBindings.findChildViewById(rootView, id);
      if (Categorie == null) {
        break missingId;
      }

      id = R.id.CategorieD;
      TextView CategorieD = ViewBindings.findChildViewById(rootView, id);
      if (CategorieD == null) {
        break missingId;
      }

      id = R.id.Nom;
      TextView Nom = ViewBindings.findChildViewById(rootView, id);
      if (Nom == null) {
        break missingId;
      }

      id = R.id.NomD;
      TextView NomD = ViewBindings.findChildViewById(rootView, id);
      if (NomD == null) {
        break missingId;
      }

      id = R.id.NumeroID;
      TextView NumeroID = ViewBindings.findChildViewById(rootView, id);
      if (NumeroID == null) {
        break missingId;
      }

      id = R.id.Prenom;
      TextView Prenom = ViewBindings.findChildViewById(rootView, id);
      if (Prenom == null) {
        break missingId;
      }

      id = R.id.PrenomD;
      TextView PrenomD = ViewBindings.findChildViewById(rootView, id);
      if (PrenomD == null) {
        break missingId;
      }

      id = R.id.Specialite;
      TextView Specialite = ViewBindings.findChildViewById(rootView, id);
      if (Specialite == null) {
        break missingId;
      }

      id = R.id.SpecialiteD;
      TextView SpecialiteD = ViewBindings.findChildViewById(rootView, id);
      if (SpecialiteD == null) {
        break missingId;
      }

      id = R.id.Telephone;
      TextView Telephone = ViewBindings.findChildViewById(rootView, id);
      if (Telephone == null) {
        break missingId;
      }

      id = R.id.TelephoneD;
      TextView TelephoneD = ViewBindings.findChildViewById(rootView, id);
      if (TelephoneD == null) {
        break missingId;
      }

      id = R.id.numD;
      TextView numD = ViewBindings.findChildViewById(rootView, id);
      if (numD == null) {
        break missingId;
      }

      CardView recCard = (CardView) rootView;

      id = R.id.recImage;
      ShapeableImageView recImage = ViewBindings.findChildViewById(rootView, id);
      if (recImage == null) {
        break missingId;
      }

      return new RecyclerItemBinding((CardView) rootView, Adresse, AdresseD, Categorie, CategorieD,
          Nom, NomD, NumeroID, Prenom, PrenomD, Specialite, SpecialiteD, Telephone, TelephoneD,
          numD, recCard, recImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
