// Generated by view binder compiler. Do not edit!
package com.example.gestion_univ.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gestion_univ.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView emailD;

  @NonNull
  public final TextView emailU;

  @NonNull
  public final ShapeableImageView imageViewU;

  @NonNull
  public final TextView nomCompletU;

  @NonNull
  public final TextView role;

  @NonNull
  public final ShapeableImageView setStatus;

  @NonNull
  public final TextView telephoneD;

  @NonNull
  public final TextView telephoneU;

  private UserItemBinding(@NonNull CardView rootView, @NonNull TextView emailD,
      @NonNull TextView emailU, @NonNull ShapeableImageView imageViewU,
      @NonNull TextView nomCompletU, @NonNull TextView role, @NonNull ShapeableImageView setStatus,
      @NonNull TextView telephoneD, @NonNull TextView telephoneU) {
    this.rootView = rootView;
    this.emailD = emailD;
    this.emailU = emailU;
    this.imageViewU = imageViewU;
    this.nomCompletU = nomCompletU;
    this.role = role;
    this.setStatus = setStatus;
    this.telephoneD = telephoneD;
    this.telephoneU = telephoneU;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static UserItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailD;
      TextView emailD = ViewBindings.findChildViewById(rootView, id);
      if (emailD == null) {
        break missingId;
      }

      id = R.id.emailU;
      TextView emailU = ViewBindings.findChildViewById(rootView, id);
      if (emailU == null) {
        break missingId;
      }

      id = R.id.imageViewU;
      ShapeableImageView imageViewU = ViewBindings.findChildViewById(rootView, id);
      if (imageViewU == null) {
        break missingId;
      }

      id = R.id.nomCompletU;
      TextView nomCompletU = ViewBindings.findChildViewById(rootView, id);
      if (nomCompletU == null) {
        break missingId;
      }

      id = R.id.role;
      TextView role = ViewBindings.findChildViewById(rootView, id);
      if (role == null) {
        break missingId;
      }

      id = R.id.setStatus;
      ShapeableImageView setStatus = ViewBindings.findChildViewById(rootView, id);
      if (setStatus == null) {
        break missingId;
      }

      id = R.id.telephoneD;
      TextView telephoneD = ViewBindings.findChildViewById(rootView, id);
      if (telephoneD == null) {
        break missingId;
      }

      id = R.id.telephoneU;
      TextView telephoneU = ViewBindings.findChildViewById(rootView, id);
      if (telephoneU == null) {
        break missingId;
      }

      return new UserItemBinding((CardView) rootView, emailD, emailU, imageViewU, nomCompletU, role,
          setStatus, telephoneD, telephoneU);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
